/*
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300,
 * Berkeley, CA, 94704.  Attention:  Intel License Inquiry.
 * Or
 * UC Berkeley EECS Computer Science Division, 387 Soda Hall #1776, 
 * Berkeley, CA,  94707. Attention: P2 Group.
 * 
 * DESCRIPTION: Tables respect their size constraint.
 *
 * Execute with
 * tests/runOverLog -o unitTests/olg/tableExpiration.olg
 *
 * At the end of the execution (after 7 seconds), there should be 4
 * printed tuples, two foundTable tuples (indicating there are exactly
 * a maximum of 2 tuples left in table), and two foundOtherTable tuples
 * with lifetimes lower than 4 seconds (indicating that at time 7, two
 * tuples from otherTable are still
 * unexpired, the ones inserted at time 4 and 6, expiring at 8 and 10
 * respectively).
 *
*/

/* No more than 2 tuples in at any time */
materialize(table, infinity, 2, keys(1,2)).

/* Tuples stay for 4 seconds */
materialize(otherTable, 4, infinity, keys(1,2)).

/* A record of the beginning of time */
materialize(start, infinity, infinity, keys(1,2)).


/** Create the triggers */
t1 insertEvent(@NI, f_now()) :-
	periodic(@NI, E, 2, 4).

t2 checkEvent(@NI, f_now()) :-
	periodic(@NI, E, 7, 1).



/** Fill the tables */
f1 table(@NI, T) :-
	insertEvent(@NI, T).

f2 otherTable(@NI, T) :-
	insertEvent(@NI, T).




/** Report the results */
r1 foundOtherTable(@NI, CT - T) :-
	checkEvent(@NI, CT),
	otherTable(@NI, T).

r2 foundTable(@NI, CT - T) :-
	checkEvent(@NI, CT), 
	table(@NI, T).


/* 
  watchmod(foundTable, "s").
  watchmod(foundOtherTable, "s").
*/

/* watch(otherTable). */

/*
watchmod(insertReport, "c").
watchmod(deleteReport, "c").
watchmod(otherTable, "d").
watchmod(foundOtherTable, "c").
*/

watchmod(foundOtherTable, "s").
watchmod(foundTable, "s").

/* watch(otherTable_delete). */
/* watch(otherTable_DELTA_DELETE). */
