/*
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300,
 * Berkeley, CA, 94704.  Attention:  Intel License Inquiry.
 * Or
 * UC Berkeley EECS Computer Science Division, 387 Soda Hall #1776, 
 * Berkeley, CA,  94707. Attention: P2 Group.
 * 
 * DESCRIPTION: Test that watched table updates are indeed delivered,
 * even if the table is not used by the code otherwise.
 *
 * Execute with
 * tests/runOverLog -o unitTests/olg/watchedTable.olg
 *
 * There should be one "RecvEvent" entry showing that insertEvent has
 * been received, and then one "InsertEvent" entry showing that table
 * has gotten an insertion.
 *
*/

materialize(table, infinity, 2, keys(1,2)).
materialize(dummy, infinity, 2, keys(1,2)).


q0 insertEvent(@NI, E) :-
	periodic(@NI, E, 1, 1).

q2 table(@NI, E) :-
	insertEvent(@NI, E).

q3 dummy(@NI, E) :- 
        insertEvent(@NI, E).

q4 delete table(@NI, E) :- 
        dummy(@NI, E).

watchmod(table, "dia").
watchmod(insertEvent, "c").

