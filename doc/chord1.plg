/*
 * 1.1 Chord
 * ---------
 */

/* The base tuples */
materialize(node, 2, infinity, 1).
materialize(finger, 4, infinity, 160).
materialize(successor, 3, infinity, 100).
materialize(predecessor, 3, infinity, 1).
materialize(bestSuccessor, 3, infinity, 1).
materialize(maxSuccessorDist, 2, infinity, 1).
materialize(nextFingerFix, 2, infinity, 1).
materialize(fingerLookup, 3, infinity, 160).
materialize(stabilize, 2, infinity, 1).
materialize(landmarkNode, 2, infinity, 1).
materialize(joinRecord, 2, infinity, 1).
materialize(successorNodeDistance, 3, infinity, 100).
materialize(successorCount, 2, infinity, 1).
materialize(fingerCount, 2, infinity, 1).
/*materialize(lookupDistance, 7, infinity, infinity).*/

/* Start count from 1 */
primarykeys(node, 1).
primarykeys(finger, 2).
primarykeys(successor, 2).
primarykeys(successorCount, 1).
primarykeys(fingerCount, 1).
primarykeys(successorNodeDistance, 2).
primarykeys(predecessor, 1).
primarykeys(bestSuccessor, 1).
primarykeys(maxSuccessorDist, 1).
primarykeys(nextFingerFix, 1).
primarykeys(fingerLookup, 2).
primarykeys(stabilizeRecord, 1).
primarykeys(landmarkNode, 1).
primarykeys(joinRecord, 1).
/*primarykeys(lookupDistance,2).*/


/** Lookups */
/* for f_range, 1 - (), 2 - [], 3 - (], 4 - [) */

watch(checkFingers).
watch(fingerCount).
watch(lookupDistance).
watch(bestLookupDistance).

rule L1 lookupResults@R(R,K,S,SI,E) :-
	node@NI(NI,N),
	lookup@NI(NI,K,R,E),
	bestSuccessor@NI(NI,S,SI),
	select_rangeID3(K,N,S). 

/* Non-log */
rule L2 lookup@SI(SI,K,R,E) :-
	node@NI(NI,N),
	lookup@NI(NI,K,R,E),
	bestSuccessor@NI(NI,S,SI),
	!select_rangeID3(K,N,S). 


rule L3 bestLookupDistance@NI(NI,K,R,E,D) :-
	lookup@NI(NI,K,R,E),
	finger@NI(NI,I,B,BI),
	node@NI(NI,N),
	select_rangeID1(B,N,K),	
	assign_distID(D,B,K). 	



/* Neighbor Selection */
watch(successor).
watch(bestSuccessor).
watch(successorCount).
watch(maxSuccessorDist).
watch(minSuccessorDist).


rule SU1 computeSuccessorNodeDistance@NI(NI,S,D) :-
         node@NI(NI,N),
	 newSuccessorEvent@NI(NI,S,SI),
	 assign_distID(D,N,S).

rule SU2 successorNodeDistance@NI(NI,S,D) :-
     computeSuccessorNodeDistance@NI(NI,S,D1),
     assign_minusOneID(D,D1).

rule SU3 newSuccessorEvent@NI(NI,S,SI) :- 
     successor@NI(NI,S,SI).


rule SU4 minSuccessorDist@NI(NI,MD) :-
        successorNodeDistance@NI(NI,S,D),
 	agg_min(MD,D).

rule SU5 bestSuccessor@NI(NI,S,SI) :-
	minSuccessorDist@NI(NI,D),
	successorNodeDistance@NI(NI,S,D),
	successor@NI(NI,S,SI).

rule SR1 successorCount@NI(NI,C) :-
	successor@NI(NI,S,SI),
 	agg_count(C).


rule SR2 evictSuccessor@NI(NI) :-
	successorCount@NI(NI,C), 
	select_gtI(C,4).


rule SR3 maxSuccessorDist@NI(NI,MD) :-
        successorNodeDistance(NI,S,D),
 	agg_max(MD,D).

rule SR4 evictSuccessorAt@NI(NI,S,D) :-
	evictSuccessor@NI(NI),
	maxSuccessorDist@NI(NI,D),
	successorNodeDistance@NI(NI,S,D).

rule SR5 delete successorNodeDistance@NI(NI,S,D) :-
	evictSuccessorAt@NI(NI,S,D),
	successorNodeDistance@NI(NI,S,D).

rule SR6 delete successor@NI(NI,S,SI) :-
	evictSuccessorAt@NI(NI,S,D),
	successor@NI(NI,S,SI).


/** Fix fingers */

/*watch(lookup).
watch(fixFinger).*/
/*watch(computeLookupOne).
watch(computeLookupTwo).*/

watch(finger).
watch(nextFingerFix).
watch(lookup).
watch(lookupResults).
watch(fingerLookup).

rule F1 fixFinger@NI(LOCAL) :-
	periodic@NI(5).

rule F2 fingerLookup@NI(NI,E,I) :-
	fixFinger@NI(NI),
	assign_random(E),
	nextFingerFix@NI(NI,I).

rule F3 fingerLookupEvent@NI(NI,E,I) :-
     fingerLookup@NI(NI,E,I).

rule F4 computeLookupOne@NI(NI,K,E,I) :-
	fingerLookupEvent@NI(NI,E,I),
	assign_idOne(K).

rule F5 computeLookupTwo@NI(NI,K,E,I) :-
     computeLookupOne@NI(NI,K1,E,I),
     assign_leftShiftID(K,K1,I).

rule F6 lookup@NI(NI,K,NI1,E) :-
     computeLookupTwo@NI(NI,K1,E,I),
     node@NI(NI,N),
     assign_varAssign(NI1,NI),
     assign_addID(K,K1,N).

/*rule F7 computeNextFingerFix@NI(NI,I) :-
        lookupResults@NI(NI,K,S,SI,E),
     	fingerLookup@NI(NI,E,I1),	
	assign_addI(I,I1,1).

rule F8 nextFingerFix@NI(NI,I) :-
	computeNextFingerFix@NI(NI,I1),	
	assign_modI(I,I1,160).

rule F9 finger@NI(NI,I,B,BI) :-
	fingerLookup@NI(NI,E,I),
	lookupResults@NI(NI,K,B,BI,E).
*/

/*watch(eagerFinger).
watch(eagerFingerOne).
watch(eagerFingerTwo).
watch(eagerFingerThree).*/
watch(nextFingerFix).

/** Eager fingers */
rule F10 eagerFinger@NI(NI,I,B,BI) :-
	fingerLookup@NI(NI,E,I),
	lookupResults@NI(NI,K,B,BI,E).

rule F11 finger@NI(NI,I,B,BI) :-
	eagerFinger@NI(NI,I,B,BI).

rule F12 eagerFingerOne@NI(NI,I,B,BI,K) :-
	eagerFinger@NI(NI,I1,B,BI), 
	!select_eqS(NI,BI),
	assign_addI(I,I1,1),
	assign_idOne(K).

rule F13 eagerFingerTwo@NI(NI,I,B,BI,K) :-
	 eagerFingerOne@NI(NI,I,B,BI,K1),
	 assign_leftShiftID(K,K1,I).

rule F14 eagerFingerThree@NI(NI,I,B,BI,K) :-
	 node@NI(NI,N),
	 eagerFingerTwo@NI(NI,I,B,BI,K1),
         assign_addID(K,K1,N).	

rule F16 eagerFinger@NI(NI,I,B,BI) :-
	 node@NI(NI,N),
	 eagerFingerThree@NI(NI,I,B,BI,K),
	 select_rangeID1(K,N,B).

rule F17 nextFingerFix@NI(NI,D) :-
	eagerFinger@NI(NI,I,B,BI),
	select_eqI(I,159),
	assign_iZero(D).

rule F18 nextFingerFix@NI(NI,0) :-
	eagerFinger@NI(NI,I,B,BI),
	select_eqS(BI,NI).

rule F17 nextFingerFix@NI(NI,I) :-
	node@NI(NI,N),
	eagerFingerThree@NI(NI,I,B,BI,K),
	select_rangeID1(K,B,N).


/* Churn Handling */

watch(join).
watch(joinEvent).
watch(joinRecord).
watch(startJoin).


rule J1 join@NI(NI,E) :-
	joinEvent@NI(NI), 
	assign_random(E).

rule J2 joinRecord@NI(NI,E) :-
	join@NI(NI,E).

rule J3 startJoin@LI(LI,N,NI,E) :-
	join@NI(NI,E),
	node@NI(NI,N),
	landmarkNode@NI(NI,LI),
	!select_eqS(LI,0).

rule J4 successor@NI(NI,N,NI1) :-
	join@NI(NI,E),
	landmarkNode@NI(NI,LI),
	node@NI(NI,N),
	assign_varAssign(NI1,NI),
	select_eqS(LI,0).

rule J5 lookup@LI(LI,N,NI,E) :-
	startJoin@LI(LI,N,NI,E).

rule J6 successor@NI(NI,S,SI) :-
	joinRecord@NI(NI,E),
	lookupResults@NI(NI,K,S,SI,E).




/* Stabilization */

watch(predecessor).
watch(successor).

/*watch(stabilize).
watch(stabilizeEvent).
watch(stabilizeRequest).
watch(sendPredecessor).
watch(notify).
watch(notifyEvent).
watch(notifyPredecessor).*/

/*
rule S0 stabilize@NI(LOCAL) :-
	periodic@NI(0.1).

rule S1 stabilizeEvent@NI(NI,E) :-
	stabilize@NI(NI),
	assign_random(E).	

rule S2 stabilizeRequest@SI(SI,NI,E) :-
	stabilizeEvent@NI(NI,E),
	bestSuccessor@NI(NI,S,SI).

rule S3 sendPredecessor@PI1(PI1,P,PI,E) :-
	stabilizeRequest@NI(NI,PI1,E),
	predecessor@NI(NI,P,PI),
	!select_eqS(PI,0).


rule S4 successor@NI(NI,P,PI) :-
	node(NI,N),
	sendPredecessor@NI(NI,P,PI,E),
	bestSuccessor@NI(NI,S,SI),
	select_rangeID1(P,N,S).

rule S5a bestSuccessorEvent@NI(NI,S,SI) :-
     bestSuccessor@NI(NI,S,SI).

rule S5 finger@NI(NI,I,S,SI) :-
     bestSuccessorEvent@NI(NI,S,SI),
     assign_iZero(I).

rule S6a notify@NI(LOCAL) :- 
     periodic@NI(0.1).

rule S6b notifyEvent@NI(NI,E) :-
	notify@NI(NI),
	assign_random(E).	

rule S6c notifyPredecessor@SI(SI,N,NI) :-
	notifyEvent@NI(NI),
	node@NI(NI,N),
	successor@NI(NI,S,SI).

rule S6d predecessor@NI(NI,P,PI) :-
	node@NI(NI,N),
	notifyPredecessor@NI(NI,P,PI),
	predecessor@NI(NI,P1,PI1),
	select_eqS(PI1,0).

rule S6e predecessor@NI(NI,P,PI) :-
	node@NI(NI,N),
	notifyPredecessor@NI(NI,P,PI),
	predecessor@NI(NI,P1,PI1),
	select_rangeID1(P,P1,N).
*/

/*	stabilizeRecord@NI(NI, E).*/


watch(sendSuccessorEvent).

/*rule S0 sendSuccessorEvent@NI(LOCAL) :-
	periodic@NI(15).

rule S5a sendSuccessors@SI(SI,NI,E) :-
	sendSuccessorEvent@NI(NI),
	successor@NI(NI,S,SI).

rule S5b returnSuccessor@PI(PI,S,SI,E) :-
	sendSuccessors@NI(NI,PI,E),
	successor@NI(NI,S,SI).

rule S5c successor@NI(NI, S, SI) :-
	returnSuccessor@NI(NI,S,SI,E).
*/
