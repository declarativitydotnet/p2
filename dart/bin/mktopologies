#!/usr/bin python2.4
# -*- Mode: python -*-
#
# Usage: mktopologies [-o outdir] topologies.xml
#
# DESCRIPTION: Given descriptions for a set of topologies, create a
# set Emulab ns-2 files for creating those topologies and write them
# either to the current working directory or the directory specified
# by the -o option.
#
# $Id$
#
import getopt
import os
import sys
sys.path.append(os.environ['DART_DIR'] + "/lib/python2.2") # NOTE: changeme!
import dart
from topology import *

MKNS2_CMD = os.environ['DART_DIR'] + "/bin/mkns2" # NOTE: changeme!

def print_usage():
    print "Usage: mktopologies [-o outdir] topologies.xml"
    print
    print "  -o outdir    Directory to write Emulab ns-2 files"
    print

def parse_cmdline(argv):
    shortopts = "o:v"
    longopts = [ "outdir" ]
    flags = {}
    flags["outdir"] = None
    opts, args = getopt.getopt(argv[1:], shortopts, longopts)
    for o, v in opts:
        if o in ("-o", "--outdir"):
            flags["outdir"] = v
    return flags, args

# NOTE: assumes 100% T3, 100% 10 mbps Ethernet
def write_topologies(tfile, outdir): 
    os.chdir(outdir)
    for t in tfile.topologies:
        cmd = "%s -o %s -3 100 -e 100 %d %d" % \
              (MKNS2_CMD, t["ns2"], t["nrouters"], t["nhosts"])
        os.system(cmd)

if __name__ == "__main__":
    try:
        flags, args = parse_cmdline(sys.argv)
    except:
        print_usage()
        sys.exit(3)
    if len(args) != 1:
        print_usage()        
        sys.exit(3)
    tfile = TopologiesFile(args[0])
    if flags["outdir"]:
        write_topologies(tfile, flags["outdir"])
    else:
        write_topologies(tfile, ".")
