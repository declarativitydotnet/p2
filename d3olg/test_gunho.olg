#include "xtrace_reader.olg"
#include "ganglia_reader.olg"

materialize(findTaskRange, infinity, infinity, keys(1, 2)).

watch(findTaskRange).

range1 findTaskRange(@X, TaskID, a_MAX<TS>, a_MIN<TS>) :-
	xtraceTask(@X, TaskID, _, _, _, _, _, TS). 

/* this code is finding start&end time of each task in the node. */

watchmod(findRunStartEndPair, "s").

find1 findRunEnd(@X, TaskID, OpID, Agent, TS) :- 
	xtraceTask(@X, TaskID, OpID, ChainID, Host, Agent, Label, TS, NextHost), 
	Label=="run end".

find2 findRunStartEndPair(@X, TaskID, Agent, StartOpID, StartTS, EndOpID, EndTS) :-
	findRunEnd(@X, TaskID, EndOpID, Agent, EndTS), 
	xtraceEdge(@X, TaskID, EndOpID, _, StartOpID, _), 
	xtraceTask(@X, TaskID, StartOpID, _, _, _, StartLabel, StartTS, _), 
	StartLabel=="run start". 

/*
xtraceTask(@X, TaskID, OpID, ChainID, Host, Agent, Label, TS, NextHost) 
xtraceEdge(@X, TaskID, OpID, ChainID, ParentOpID, EdgeType) 
*/
/*
watch(tsMatch).

materialize(tsMatch, infinity, infinity, keys(1, 2)).

diff2 tsMatch(@X, TS, Time, D1, D2, D3, Diff1, Diff2) :- 
	xtraceTask(@X, TaskID, OpID, ChainID, Host, Agent, Label, TS, NextHost),
	ganglia(@X, Time),
	tsMatch(@X, TS, OrgMatch),
	periodic(@X, E, 5, 1),
	D1 := 1 * TS,
	D2 := 1 * Time,
	D3 := 1 * OrgMatch,
	Diff1 := D1 - D2,
	Diff2 := D1 - D3.
*/
/*
diff1 findDiff(@X, D1, D2, Diff) :-
	xtraceTask(@X, TaskID, OpID, ChainID, Host, Agent, Label, TS, NextHost), 
	ganglia(@X, Time),
	periodic(@X, E, 3, 1), 
	D1 := 0 + TS,
	D2 := 0 + Time,
	Diff = D1-D2.
*/

