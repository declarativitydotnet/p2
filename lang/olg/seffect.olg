namespace seffect {
  materialize(commit, 1, 1, keys(2)).

  i0 ::sys::program_add(@A, Pid, Name, Rewrite, "seffect", Text, Msg, P2DL, Src) :-
        commitRewrite(@A, Pid),
        commit(@A, Pid),
        ::sys::program(@A, Pid, Name, Rewrite, Status, Text, Msg, P2DL, Src).

  i1 commit(@A, Pid) :-
        programEvent(@A, Pid, _, _, _, _, _, _, _).

  i2 commitRewrite(@A, Pid) :- commit(@A, Pid).

  i3 delete commit(@A, Pid) :- commitRewrite(@A, Pid).

  sa1 sideAffect(@A, Pid, Rid, Tablename, f_uniqueSchema(Schema)) :-
        programEvent(@A, Pid, _, _, _, _, _, _, _),
        ::sys::rule(@A, Rid, Pid, _, HeadID, _, _, _, _),
        ::sys::predicate(@A, HeadID, Rid, _, _, Tid, _, Schema, _, AM, New),
        ::sys::table(@A, Tid, Tablename, _, _, _, _, _, Pid).
      
  sa2 ::sys::sideAffect(@A, f_idgen(), Pid, Tablename, Type, Trigger, Schema) :-
        sideAffect(@A, Pid, Rid, Tablename, Schema),
        Type := "DELETE",
        Trigger := Tablename + "_delete".

  sa3 ::sys::sideAffect(@A, f_idgen(), Pid, Tablename, Type, Trigger, Schema) :-
        sideAffect(@A, Pid, Rid, Tablename, Schema),
        Type := "ADD",
        Trigger := Tablename + "_add".

  sa4 ::sys::predicate(@A, HeadID, Rid, NotIn, Trigger, null, "SEND", Schema, Pos, AM, New) :-
        commitRewrite(@A, Pid),
        commit(@A, Pid),
        ::sys::rule(@A, Rid, Pid, _, HeadID, _, Delete, _, _),
        ::sys::predicate(@A, HeadID, Rid, NotIn, Name, Tid, ECA, Schema, Pos, AM, New),
        ::sys::table(@A, Tid, Tablename, _, _, _, _, _, TPid),
        ::sys::sideAffect(@A, Sid, TPid, Tablename, Type, Trigger, _),
        Delete == true, Type == "DELETE".

  sa5 ::sys::rule(@A, Rid, Pid, Name, HeadID, P2DL, false, Terms, New) :-
        commitRewrite(@A, Pid),
        commit(@A, Pid),
        ::sys::rule(@A, Rid, Pid, Name, HeadID, P2DL, Delete, Terms, New).

  sa6 ::sys::predicate(@A, HeadID, Rid, NotIn, Trigger, null, "SEND", Schema, Pos, AM, New) :-
        commitRewrite(@A, Pid),
        commit(@A, Pid),
        ::sys::rule(@A, Rid, Pid, _, HeadID, _, Delete, _, _),
        ::sys::predicate(@A, HeadID, Rid, NotIn, Tablename, Tid, ECA, Schema, Pos, AM, New),
        ::sys::table(@A, Tid, Tablename, _, _, _, _, _, TPid),
        ::sys::sideAffect(@A, Sid, TPid, Tablename, Type, Trigger, _),
        Delete == false, Type == "ADD".

  sa7 sideAffectRule(@A, Pid, Sid, f_idgen(), Tablename, Type, Trigger, Schema) :-
        commitRewrite(@A, Pid),
        commit(@A, Pid),
        ::sys::sideAffect(@A, Sid, Pid, Tablename, Type, Trigger, Schema).
        
  sa8 ::sys::rule(@A, Rid, Pid, Name, HeadID, null, Delete, 2, false) :-
        sideAffectRule(@A, Pid, Rid, HeadID, _, Type, Trigger, _),
        Name := "rule_" + Trigger,
        Delete := (Type == "DELETE" ? true : false).

  sa9 ::sys::predicate(@A, HeadID, Rid, false, Tablename, Tid, Type, Schema, 0, null, false) :-
        sideAffectRule(@A, _, Rid, HeadID, Tablename, Type, Trigger, Schema),
        ::sys::table(@A, Tid, Tablename, _, _, _, _, _, Pid).

  sa10 ::sys::predicate(@A, f_idgen(), Rid, false, Trigger, null, "RECV", Schema, 1, null, false) :-
        sideAffectRule(@A, _, Rid, _, _, _, Trigger, Schema).

}
