/**
  * This file is distributed under the terms in the attached LICENSE file.
  * If you do not find this file, copies can be found by writing to:
  * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300,
  * Berkeley, CA, 94704.  Attention:  Intel License Inquiry.
  * Or
  * UC Berkeley EECS Computer Science Division, 387 Soda Hall #1776, 
  * Berkeley, CA,  94707. Attention: P2 Group.
  * 
  * $Id$
  * 
  * DESCRIPTION: The purpose of this program is to test whether for a
  * given relation, any of its fields can play the role of location
  * specifier.
  *
  * Execute as follows:
  *
  * Start node 11111 via
  *
  * tests/runOverLog -o unitTests/olg/locSpec.olg -DLOCALID=\"localhost:11111\" -p 11111 -DNEIGHBORID=\"localhost:22222\" -DEVENTID=235691 
  *
  * Then start node 22222 via
  *
  * tests/runOverLog -o unitTests/olg/locSpec.olg -DLOCALID=\"localhost:22222\" -p 22222 -DNEIGHBORID=\"localhost:11111\" -DEVENTID=235691 
  * 
  * Success is indicated as follows:
  * - On node 22222, the new tuple link(localhost:22222,
  *   localhost:11111, 235691, firstLocSpec) is only added to the database.
  * 
  * - On node 11111, the new tuple link(localhost:22222,
  *   localhost:11111, 235691, secondLocSpec) is only added to the database
  *
  * 
***/

materialize(link, infinity, infinity, keys(1,2,3,4)).

link(LOCALID, NEIGHBORID, 0, "fact").

r1 forwardEvent(@Me, EVENTID) :-
   periodic(@Me, E, 1, 1),
   Me == "localhost:22222".

r3 link(@Me, Him, EventID, "firstLocSpec") :-
   forwardEvent(@Me, EventID),
   link(@Me, Him, 0, "fact").

r4 matchFound(@Me, Him, EventID) :-
   link(@Me, Him, EventID, Type1),
   Type1 == "firstLocSpec",
   link(@Me, Him, 0, Type2),
   Type2 == "fact".

r5 link(Me, @Him, EventID, "secondLocSpec") :-
   matchFound(@Me, Him, EventID).

watchmod(link, "a").




