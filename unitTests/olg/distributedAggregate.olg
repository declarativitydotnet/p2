/**
  * This file is distributed under the terms in the attached LICENSE file.
  * If you do not find this file, copies can be found by writing to:
  * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300,
  * Berkeley, CA, 94704.  Attention:  Intel License Inquiry.
  * Or
  * UC Berkeley EECS Computer Science Division, 387 Soda Hall #1776, 
  * Berkeley, CA,  94707. Attention: P2 Group.
  * 
  * $Id$
  * 
  * DESCRIPTION: Event aggregates with multiple distributed tables are
  * not supported. Note that single-table distributed event aggregates
  * are supported. So rule r0 and r2 should raise no errors.
  * 
  * Run me as follows:
  * tests/runOverLog -o unitTests/olg/distributedAggregate.olg
  *
  * An error should be issued because rule r1 is a distributed
  * event-table aggregate.
***/

materialize(table, infinity, infinity, keys(1,2,3,4)).
materialize(otherTable, infinity, infinity, keys(1,2)).
table("localhost:10000", 3, 0, 1).
table("localhost:10000", 3, 1, 2).
table("localhost:10000", 3, 5, 2).

r0 matches(@A, B, a_COUNT<*>) :-
	event(@A, B, C),
	table(A, @C, D, E).

r1 matches(@A, B, a_COUNT<*>) :-
	event(@A, B, C),
	otherTable(@D, L),
	table(A, @C, D, E).

r2 matches(@A, B, a_COUNT<*>) :-
	event(@A, B, C),
	table(A, @C, D, E).

r3 event(@A, B, C) :- periodic(@A, E, 1, 1), B := 2, C := 3.

watch(event).
watch(matches).

