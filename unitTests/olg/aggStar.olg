/*
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300,
 * Berkeley, CA, 94704.  Attention:  Intel License Inquiry.
 * Or
 * UC Berkeley EECS Computer Science Division, 387 Soda Hall #1776, 
 * Berkeley, CA,  94707. Attention: P2 Group.
 * 
 * DESCRIPTION: Regression test for aggwrap using * aggregate field
 *
 * Execute with
 * tests/runOverLog -o unitTests/olg/aggStar.olg
 *
 * A single result (i.e., SendAction line) should come from each of
 * the 6 rules. Rules q1, q2, and q3 should contain a count of 4 each,
 * along with the localhost:10000 address for the first two (in
 * different orders) and the random number in the third.
 *
 * The last three rules should have the same orderings but results of 0.
*/

materialize(table, infinity, infinity, keys(2)).

table("localhost:10000", 7, "localhost:10001", 1.5).
table("localhost:10000", 4, "localhost:10002", 5.0).
table("localhost:10000", 2, "localhost:10006", 6.0).
table("localhost:10000", 3, "localhost:10007", 7.0).

q1 prodEvent1(@NI, a_COUNT<*>) :- periodic(@NI, E, 1, 1),
                              table(@NI, Num, Addr, Double).

q2 prodEvent2(a_COUNT<*>, @NI) :- periodic(@NI, E, 1, 1),
                              table(@NI, Num, Addr, Double).

q3 prodEvent3(a_COUNT<*>, E, @NI) :- periodic(@NI, E, 1, 1),
                              table(@NI, Num, Addr, Double).

q1empty prodEvent1Empty(@NI, a_COUNT<*>) :- periodic(@NI, E, 1, 1),
                              table(@NI, Num, Addr, Double),
			      NI == Addr.

q2empty prodEvent2Empty(a_COUNT<*>, @NI) :- periodic(@NI, E, 1, 1),
                              table(@NI, Num, Addr, Double),
			      NI == Addr.

q3empty prodEvent3Empty(a_COUNT<*>, E, @NI) :- periodic(@NI, E, 1, 1),
                              table(@NI, Num, Addr, Double),
			      NI == Addr.

watchmod(prodEvent1, "s").
watchmod(prodEvent2, "s").
watchmod(prodEvent3, "s").
watchmod(prodEvent1Empty, "s").
watchmod(prodEvent2Empty, "s").
watchmod(prodEvent3Empty, "s").

